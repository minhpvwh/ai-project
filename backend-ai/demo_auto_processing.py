#!/usr/bin/env python3
"""
Demo script for automatic AI processing
"""

import os
import time
from document_manager import DocumentManager

def demo_auto_processing():
    """Demo automatic AI processing functionality."""
    print("ü§ñ Demo: Automatic AI Processing")
    print("=" * 50)
    
    # Create sample documents
    sample_docs = [
        {
            "title": "AI Technology Overview",
            "content": """
            Artificial Intelligence (AI) is revolutionizing the way we work and live. 
            From machine learning algorithms to natural language processing, AI technologies 
            are being integrated into various industries including healthcare, finance, 
            education, and transportation. The future of AI holds great promise for 
            solving complex problems and improving human productivity.
            
            Key areas of AI development include:
            - Machine Learning and Deep Learning
            - Natural Language Processing
            - Computer Vision
            - Robotics and Automation
            - Expert Systems
            """
        },
        {
            "title": "T·ªïng quan v·ªÅ Tr√≠ tu·ªá Nh√¢n t·∫°o",
            "content": """
            Tr√≠ tu·ªá nh√¢n t·∫°o (AI) ƒëang c√°ch m·∫°ng h√≥a c√°ch ch√∫ng ta l√†m vi·ªác v√† s·ªëng. 
            T·ª´ c√°c thu·∫≠t to√°n h·ªçc m√°y ƒë·∫øn x·ª≠ l√Ω ng√¥n ng·ªØ t·ª± nhi√™n, c√°c c√¥ng ngh·ªá AI 
            ƒëang ƒë∆∞·ª£c t√≠ch h·ª£p v√†o nhi·ªÅu ng√†nh c√¥ng nghi·ªáp bao g·ªìm y t·∫ø, t√†i ch√≠nh, 
            gi√°o d·ª•c v√† giao th√¥ng v·∫≠n t·∫£i. T∆∞∆°ng lai c·ªßa AI h·ª©a h·∫πn gi·∫£i quy·∫øt 
            nh·ªØng v·∫•n ƒë·ªÅ ph·ª©c t·∫°p v√† c·∫£i thi·ªán nƒÉng su·∫•t c·ªßa con ng∆∞·ªùi.
            
            C√°c lƒ©nh v·ª±c ch√≠nh c·ªßa AI bao g·ªìm:
            - H·ªçc m√°y v√† H·ªçc s√¢u
            - X·ª≠ l√Ω ng√¥n ng·ªØ t·ª± nhi√™n
            - Th·ªã gi√°c m√°y t√≠nh
            - Robot v√† T·ª± ƒë·ªông h√≥a
            - H·ªá th·ªëng chuy√™n gia
            """
        }
    ]
    
    try:
        dm = DocumentManager()
        print("‚úÖ DocumentManager initialized")
        
        for i, doc in enumerate(sample_docs, 1):
            print(f"\nüìÑ Processing document {i}: {doc['title']}")
            print("-" * 40)
            
            # Auto-process document
            start_time = time.time()
            doc_id = dm.process_document(doc['content'], doc['title'])
            processing_time = time.time() - start_time
            
            print(f"‚è±Ô∏è  Processing time: {processing_time:.2f} seconds")
            print(f"üÜî Document ID: {doc_id}")
            
            # Display results
            dm.display_document_summary(doc_id)
            
            print("\n" + "="*50)
        
        # Search demo
        print("\nüîç Search Demo:")
        print("-" * 20)
        
        # Search for AI-related documents
        ai_docs = dm.search_documents("AI")
        print(f"Found {len(ai_docs)} documents containing 'AI':")
        for doc in ai_docs:
            print(f"- {doc['title']} (Language: {doc.get('language', 'unknown')})")
        
        # Search for Vietnamese documents
        vi_docs = dm.search_documents("tr√≠ tu·ªá")
        print(f"\nFound {len(vi_docs)} Vietnamese documents:")
        for doc in vi_docs:
            print(f"- {doc['title']} (Language: {doc.get('language', 'unknown')})")
        
        dm.close()
        print("\nüéâ Demo completed successfully!")
        
    except Exception as e:
        print(f"‚ùå Demo failed: {e}")

def demo_file_processing():
    """Demo file processing with automatic AI."""
    print("\nüìÅ Demo: File Processing with Auto AI")
    print("=" * 50)
    
    # Create test files
    test_files = [
        {
            "filename": "ai_guide.txt",
            "content": """
            Machine Learning Guide
            
            Machine learning is a subset of artificial intelligence that focuses on 
            algorithms that can learn from data. There are three main types:
            
            1. Supervised Learning: Learning with labeled training data
            2. Unsupervised Learning: Finding patterns in unlabeled data  
            3. Reinforcement Learning: Learning through interaction with environment
            
            Popular algorithms include linear regression, decision trees, 
            neural networks, and support vector machines.
            """
        },
        {
            "filename": "huong_dan_hoc_may.txt", 
            "content": """
            H∆∞·ªõng d·∫´n H·ªçc M√°y
            
            H·ªçc m√°y l√† m·ªôt t·∫≠p con c·ªßa tr√≠ tu·ªá nh√¢n t·∫°o t·∫≠p trung v√†o 
            c√°c thu·∫≠t to√°n c√≥ th·ªÉ h·ªçc t·ª´ d·ªØ li·ªáu. C√≥ ba lo·∫°i ch√≠nh:
            
            1. H·ªçc c√≥ gi√°m s√°t: H·ªçc v·ªõi d·ªØ li·ªáu hu·∫•n luy·ªán c√≥ nh√£n
            2. H·ªçc kh√¥ng gi√°m s√°t: T√¨m ki·∫øm m·∫´u trong d·ªØ li·ªáu kh√¥ng c√≥ nh√£n
            3. H·ªçc tƒÉng c∆∞·ªùng: H·ªçc th√¥ng qua t∆∞∆°ng t√°c v·ªõi m√¥i tr∆∞·ªùng
            
            C√°c thu·∫≠t to√°n ph·ªï bi·∫øn bao g·ªìm h·ªìi quy tuy·∫øn t√≠nh, c√¢y quy·∫øt ƒë·ªãnh,
            m·∫°ng n∆°-ron v√† m√°y vector h·ªó tr·ª£.
            """
        }
    ]
    
    try:
        dm = DocumentManager()
        
        for test_file in test_files:
            # Create file
            with open(test_file['filename'], 'w', encoding='utf-8') as f:
                f.write(test_file['content'])
            
            print(f"\nüìÑ Processing file: {test_file['filename']}")
            
            # Auto-process file
            document = dm.upload_document(test_file['filename'], test_file['filename'].replace('.txt', ''))
            
            print(f"‚úÖ File processed: {document['_id']}")
            print(f"üåç Language: {document.get('language', 'unknown')}")
            print(f"üè∑Ô∏è  Tags: {', '.join(document.get('tags', []))}")
            print(f"üìù Summary: {document.get('summary', '')[:100]}...")
            
            # Clean up
            os.remove(test_file['filename'])
            print(f"üóëÔ∏è  Cleaned up {test_file['filename']}")
        
        dm.close()
        print("\nüéâ File processing demo completed!")
        
    except Exception as e:
        print(f"‚ùå File processing demo failed: {e}")

def main():
    """Run all demos."""
    print("üöÄ Automatic AI Processing Demo")
    print("=" * 60)
    
    if not os.getenv('ANTHROPIC_API_KEY'):
        print("‚ö†Ô∏è  ANTHROPIC_API_KEY not set. AI features will not work.")
        return
    
    try:
        demo_auto_processing()
        demo_file_processing()
        
        print("\n" + "="*60)
        print("üéä All demos completed successfully!")
        print("üí° The system now automatically processes documents with AI!")
        
    except Exception as e:
        print(f"‚ùå Demo failed: {e}")

if __name__ == "__main__":
    main()
